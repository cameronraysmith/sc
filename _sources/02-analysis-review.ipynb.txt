{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "59520860-b69b-4e5d-a049-2325c3e70e5b",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "# Basic single-cell analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6950c1b-5cbb-4be5-83c4-9029d7f3d969",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "source": [
    "## Overview"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1591584-6e8d-4d2f-aef6-4a7269e352aa",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "This notebook follows the tutorial by [mousepixels/sanbomics](https://github.com/mousepixels/sanbomics/blob/main/single_cell_analysis_complete_class.ipynb), which has an accompanying [screencast](https://youtu.be/uvyG9yLuNSE?t=319).\n",
    "\n",
    "Analysis is illustrated with single-nucleus RNA sequencing data from the following paper <cite data-cite=\"Melms2021-bj\">Melms et al. (2021)</cite>\n",
    "\n",
    "> Melms JC, Biermann J, Huang H, Wang Y, Nair A, Tagore S, et al.\n",
    "A molecular single-cell lung atlas of lethal COVID-19.\n",
    "Nature. 2021;595: 114–119. [doi:10.1038/s41586-021-03569-0](https://doi.org/10.1038/s41586-021-03569-0)\n",
    "\n",
    "This paper examined 116,000 nuclei from the lungs of nineteen patients who underwent autopsy following death in association with COVID-19. Findings reported in the abstract of the paper include:\n",
    "\n",
    "1. activated monocyte-derived macrophages and alveolar macrophages\n",
    "1. impaired T cell activation\n",
    "1. monocyte/macrophage-derived interleukin-1β and epithelial cell-derived interleukin-6\n",
    "1. alveolar type 2 cells adopted an inflammation-associated transient progenitor cell state and failed to undergo full transition into alveolar type 1 cells\n",
    "1. expansion of CTHRC1+ pathological fibroblasts\n",
    "1. protein activity and ligand–receptor interactions suggest putative drug targets\n",
    "\n",
    "This notebook makes extensive use of <cite data-cite=\"Wolf2018-nu\">Wolf et al. (2018)</cite> and <cite data-cite=\"Lopez2018-em\">Lopez et al. (2018)</cite> including updates that have been made to the underlying software packages, [scanpy](https://github.com/scverse/scanpy) and [scvi-tools](https://github.com/scverse/scvi-tools), since their initial publication."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1bf91286-2ec3-45a5-960f-349c7ab00e92",
   "metadata": {
    "incorrectly_encoded_metadata": "tags=[] slideshow={\"slide_type\": \"slide\"} jp-MarkdownHeadingCollapsed=true",
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "## Setup"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37d85862-f21b-486e-abb7-6331cb0c8431",
   "metadata": {
    "incorrectly_encoded_metadata": "tags=[] slideshow={\"slide_type\": \"subslide\"} jp-MarkdownHeadingCollapsed=true",
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "source": [
    "### Import libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f9a8d232-554e-4456-a18f-2c2093c3d552",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:46:52.905885Z",
     "iopub.status.busy": "2022-09-27T19:46:52.904959Z",
     "iopub.status.idle": "2022-09-27T19:46:55.134084Z",
     "shell.execute_reply": "2022-09-27T19:46:55.133071Z",
     "shell.execute_reply.started": "2022-09-27T19:46:52.905769Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from inspect import getmembers\n",
    "from pprint import pprint\n",
    "from types import FunctionType\n",
    "\n",
    "import scanpy as sc"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c7f0e5b1-c6bf-4339-8b24-dbcc5f20ade4",
   "metadata": {
    "incorrectly_encoded_metadata": "tags=[] slideshow={\"slide_type\": \"subslide\"} jp-MarkdownHeadingCollapsed=true",
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "source": [
    "### Setup plotting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7753e0a8-2531-4072-bada-0ed4f1ce2424",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:46:55.136592Z",
     "iopub.status.busy": "2022-09-27T19:46:55.136013Z",
     "iopub.status.idle": "2022-09-27T19:46:55.141085Z",
     "shell.execute_reply": "2022-09-27T19:46:55.140114Z",
     "shell.execute_reply.started": "2022-09-27T19:46:55.136562Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import matplotlib.font_manager\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# import matplotlib_inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0a66d0c4-f945-4292-af42-41a4c882c69d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:46:55.142821Z",
     "iopub.status.busy": "2022-09-27T19:46:55.142538Z",
     "iopub.status.idle": "2022-09-27T19:46:55.151919Z",
     "shell.execute_reply": "2022-09-27T19:46:55.150606Z",
     "shell.execute_reply.started": "2022-09-27T19:46:55.142797Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# fonts_path = \"/usr/share/texmf/fonts/opentype/public/lm/\" #ubuntu\n",
    "# fonts_path = \"~/Library/Fonts/\" # macos\n",
    "fonts_path = \"/usr/share/fonts/OTF/\"  # arch\n",
    "# user_path = \"$HOME/\" # user\n",
    "# fonts_path = user_path + \"fonts/latinmodern/opentype/public/lm/\"  # home\n",
    "matplotlib.font_manager.fontManager.addfont(fonts_path + \"lmsans10-regular.otf\")\n",
    "matplotlib.font_manager.fontManager.addfont(fonts_path + \"lmroman10-regular.otf\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "19089090-2e39-48b9-8347-aaa8c7d73365",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:46:55.153875Z",
     "iopub.status.busy": "2022-09-27T19:46:55.153575Z",
     "iopub.status.idle": "2022-09-27T19:46:55.164857Z",
     "shell.execute_reply": "2022-09-27T19:46:55.163883Z",
     "shell.execute_reply.started": "2022-09-27T19:46:55.153850Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# https://stackoverflow.com/a/36622238/446907\n",
    "%config InlineBackend.figure_formats = ['svg']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e2ee4e70-7272-4ae2-9f15-c9d9401175de",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:46:55.167271Z",
     "iopub.status.busy": "2022-09-27T19:46:55.166962Z",
     "iopub.status.idle": "2022-09-27T19:46:55.173731Z",
     "shell.execute_reply": "2022-09-27T19:46:55.172824Z",
     "shell.execute_reply.started": "2022-09-27T19:46:55.167246Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "plt.style.use(\"default\")  # reset default parameters\n",
    "# https://stackoverflow.com/a/3900167/446907\n",
    "plt.rcParams.update(\n",
    "    {\n",
    "        \"font.size\": 16,\n",
    "        \"font.family\": [\"sans-serif\"],\n",
    "        \"font.serif\": [\"Latin Modern Roman\"] + plt.rcParams[\"font.serif\"],\n",
    "        \"font.sans-serif\": [\"Latin Modern Sans\"] + plt.rcParams[\"font.sans-serif\"],\n",
    "    }\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b276e8e9-465a-48b9-abb1-804023ad0452",
   "metadata": {
    "incorrectly_encoded_metadata": "tags=[] slideshow={\"slide_type\": \"subslide\"} jp-MarkdownHeadingCollapsed=true",
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "source": [
    "### Utility functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b00d10ed-2dca-4162-8b96-6b7a4e6d2495",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:46:55.175656Z",
     "iopub.status.busy": "2022-09-27T19:46:55.175294Z",
     "iopub.status.idle": "2022-09-27T19:46:55.181978Z",
     "shell.execute_reply": "2022-09-27T19:46:55.181052Z",
     "shell.execute_reply.started": "2022-09-27T19:46:55.175624Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def attributes(obj):\n",
    "    \"\"\"\n",
    "    get object attributes\n",
    "    \"\"\"\n",
    "    disallowed_names = {\n",
    "        name for name, value in getmembers(type(obj)) if isinstance(value, FunctionType)\n",
    "    }\n",
    "    return {\n",
    "        name: getattr(obj, name)\n",
    "        for name in dir(obj)\n",
    "        if name[0] != \"_\" and name not in disallowed_names and hasattr(obj, name)\n",
    "    }\n",
    "\n",
    "\n",
    "def print_attributes(obj):\n",
    "    \"\"\"\n",
    "    print object attributes\n",
    "    \"\"\"\n",
    "    pprint(attributes(obj))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9d4bcb6b-b476-4fec-b38d-bfa91470d91a",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "## Import data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7237d5b8-2eed-43b6-a99d-850def235b55",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "Here we review how the data were downloaded, and proceed to import and inspect the data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef4bb28d-cb0c-404a-a23b-add821f95335",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "source": [
    "### Data download"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "765825f9-3a14-4eba-9643-5cebe5f0ad62",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "Data with GEO accession [GSE171524](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE171524) was downloaded using [./data/download_geo_data.sh](./data/download_geo_data.sh) with parameters\n",
    "\n",
    "```bash\n",
    "./download_geo_data.sh \\\n",
    "       -a GSE132771 \\\n",
    "       -f 'ftp.*RAW.*' \\\n",
    "       -j '..|.supplementary_files?|..|.url?|select(length>0)'\n",
    "```\n",
    "\n",
    "A skeleton of this script that may work in this case is\n",
    "\n",
    "```bash\n",
    "!/usr/bin/env bash\n",
    "\n",
    "#-- debugging (comment to reduce stderr output)\n",
    "#-- https://wiki.bash-hackers.org/scripting/debuggingtips\n",
    "export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'\n",
    "set -o xtrace\n",
    "\n",
    "# get metadata\n",
    "# Melms JC, Biermann J, Huang H, Wang Y, Nair A, Tagore S, et al.\n",
    "# A molecular single-cell lung atlas of lethal COVID-19.\n",
    "# Nature. 2021;595: 114–119. doi:10.1038/s41586-021-03569-0\n",
    "# GSE171524\n",
    "ffq -l 1 -o GSE171524.json GSE171524\n",
    "\n",
    "# download raw data\n",
    "wget ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE171nnn/GSE171524/suppl/GSE171524_RAW.tar\n",
    "\n",
    "# list contents\n",
    "tar -tvf GSE171524_RAW.tar\n",
    "\n",
    "# untar\n",
    "mkdir -p GSE171524 && \\\n",
    "tar -xvf GSE171524_RAW.tar -C GSE171524\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f397a2cd-f736-4ad8-9c67-9489fb4175e4",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "source": [
    "### Data load"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3da09157-598a-49e4-91fc-c553c39f919d",
   "metadata": {},
   "source": [
    "See the [documentation for scanpy read csv](https://scanpy.readthedocs.io/en/latest/generated/scanpy.read_csv.html) which returns an [AnnData object](https://anndata.readthedocs.io/en/stable/generated/anndata.AnnData.html#anndata.AnnData)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "af6bd525-b037-46a1-bced-ec5c95fc27b6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:49:05.980241Z",
     "iopub.status.busy": "2022-09-27T19:49:05.979268Z",
     "iopub.status.idle": "2022-09-27T19:49:37.400898Z",
     "shell.execute_reply": "2022-09-27T19:49:37.399816Z",
     "shell.execute_reply.started": "2022-09-27T19:49:05.980204Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AnnData object with n_obs × n_vars = 6099 × 34546"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adata = None\n",
    "adata = sc.read_csv(\n",
    "    \"data/GSE171524/supplementary/GSM5226574_C51ctr_raw_counts.csv.gz\"\n",
    ").T\n",
    "adata"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1fc1706e-ed40-4e3f-aac1-9177f7bc3d8c",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "Note the `scanpy.read_csv` function accepts gzipped files."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c91ab10-ff83-46f4-84b1-98434d7a7331",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "source": [
    "### Data properties"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "681493e8-c15c-479a-bab8-b2f0e4a83c63",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:54:33.477056Z",
     "iopub.status.busy": "2022-09-27T19:54:33.476658Z",
     "iopub.status.idle": "2022-09-27T19:54:33.483142Z",
     "shell.execute_reply": "2022-09-27T19:54:33.482244Z",
     "shell.execute_reply.started": "2022-09-27T19:54:33.477024Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "anndata._core.anndata.AnnData"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(adata)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "9c229ea8-dc2f-4a62-969f-e0a5ee230b04",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T20:01:49.006049Z",
     "iopub.status.busy": "2022-09-27T20:01:49.004903Z",
     "iopub.status.idle": "2022-09-27T20:01:49.012225Z",
     "shell.execute_reply": "2022-09-27T20:01:49.011245Z",
     "shell.execute_reply.started": "2022-09-27T20:01:49.006009Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6099, 34546)"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adata.X.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "27b0621a-22d8-411d-a5fb-527c580280b2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:54:38.133671Z",
     "iopub.status.busy": "2022-09-27T19:54:38.133272Z",
     "iopub.status.idle": "2022-09-27T19:54:38.168013Z",
     "shell.execute_reply": "2022-09-27T19:54:38.167103Z",
     "shell.execute_reply.started": "2022-09-27T19:54:38.133642Z"
    },
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'T': AnnData object with n_obs × n_vars = 34546 × 6099,\n",
      " 'X': array([[0., 0., 0., ..., 0., 0., 0.],\n",
      "       [0., 0., 0., ..., 0., 0., 0.],\n",
      "       [0., 0., 0., ..., 0., 0., 0.],\n",
      "       ...,\n",
      "       [0., 0., 0., ..., 0., 0., 0.],\n",
      "       [0., 0., 0., ..., 0., 0., 0.],\n",
      "       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32),\n",
      " 'file': Backing file manager: no file is set.,\n",
      " 'filename': None,\n",
      " 'is_view': False,\n",
      " 'isbacked': False,\n",
      " 'isview': False,\n",
      " 'layers': Layers with keys: ,\n",
      " 'n_obs': 6099,\n",
      " 'n_vars': 34546,\n",
      " 'obs': Empty DataFrame\n",
      "Columns: []\n",
      "Index: [TAGGTACCATGGCCAC-1_1, ATTCACTGTAACAGGC-1_1, TAACTTCCAACCACGC-1_1, TTGGGTACACGACAAG-1_1, AGGCCACAGAGTCACG-1_1, CACTGAAGTCGAAGCA-1_1, ACTGATGTCTGCACCT-1_1, TTACCGCCACTCAGAT-1_1, TTGGTTTTCCTAGCTC-1_1, TGGGAAGTCAGTGATC-1_1, CCACGAGTCTCTTAAC-1_1, ACTTCCGCACAACGCC-1_1, GGGAAGTAGCGACCCT-1_1, TGGTAGTTCCCGTGTT-1_1, CGCATAACATGCCGGT-1_1, TCTATCACAAGGCTTT-1_1, ATCCACCAGAGGTATT-1_1, TAACGACAGATGACCG-1_1, TCTTAGTGTATGAGGC-1_1, CACTTCGCAGTACTAC-1_1, GTCAAACAGAACGTGC-1_1, GCAACCGAGGGCAGGA-1_1, CATACTTTCATCACTT-1_1, AAGAACATCGGATTAC-1_1, GGGTATTGTACGATGG-1_1, CTGTAGATCAACGTGT-1_1, GTCATTTGTATCTCGA-1_1, CCTTGTGCAGAGGGTT-1_1, AAGTTCGCAACACGTT-1_1, TCATTCACAAATCAAG-1_1, TCCATGCCAACGACTT-1_1, TCCTTCTCAGTTTCAG-1_1, TGTGAGTCAAATGATG-1_1, AAACGAAGTACAGAGC-1_1, CAACCAAAGTATTCCG-1_1, CTTCTCTCAGAGACTG-1_1, TACAACGGTGGCTGAA-1_1, AACGGGACATGCCGGT-1_1, AACCAACGTTGGGAAC-1_1, TATATCCAGCGTCAGA-1_1, AGACAAACATCCCGTT-1_1, ATGACCAGTCTTCATT-1_1, CTTACCGTCAGACATC-1_1, CGGGACTGTTAGTTCG-1_1, ATTCATCCACTGAGTT-1_1, TCATGAGAGAGGCGGA-1_1, TCCCACATCTAGTACG-1_1, CTTCCTTCATATCTCT-1_1, CCGGACACACTCGATA-1_1, ACACGCGCACCTGTCT-1_1, GAATCGTCAGAAGTGC-1_1, GGTGGCTCAAGCTCTA-1_1, CCTGCATCACATATGC-1_1, GTGGGAAGTTAAAGTG-1_1, CGTTCTGGTACTAGCT-1_1, ACCCTCACAATAGTCC-1_1, GCCCGAACAAACTAAG-1_1, GTGGAAGCACATGACT-1_1, GTTGTGACATCGATAC-1_1, GACAGCCCAGGTCCGT-1_1, TAAGCACGTTGGCTAT-1_1, GGGACAAGTCACCACG-1_1, CTGGCAGGTTCGGTAT-1_1, GACTCAACACTGTGAT-1_1, GCCAGTGGTGTGGTCC-1_1, TCTAACTGTAGGCAGT-1_1, GAAGAATGTAGCTTGT-1_1, TCACTCGCAATCTCTT-1_1, CAAGACTTCCCACAGG-1_1, CAGATACGTGACTCTA-1_1, TGGGATTAGAGGGTCT-1_1, ACCTGAACACTCCTTG-1_1, GACACGCCACTCGATA-1_1, CTCATCGTCACCGCTT-1_1, AGGTAGGGTCCCTGTT-1_1, TACCCGTCAACACTAC-1_1, TGCTGAAAGACGGATC-1_1, ACACCAACACAACGCC-1_1, AAGATAGCAAATGGAT-1_1, CTTCAATGTGACAGGT-1_1, GAAGCGAAGAGTTGAT-1_1, GCCGTGACACAAGCCC-1_1, CCTCAACCATACAGGG-1_1, ACAAAGATCCACAGGC-1_1, CAGATACAGTCCCAGC-1_1, GGCAGTCTCCGGTTCT-1_1, TAAGTCGAGCTGAGCA-1_1, GAGACCCGTCTGTGCG-1_1, TAACACGCATGTGTCA-1_1, TCAATTCGTTCTCGCT-1_1, GCTTTCGCACAGTGTT-1_1, AACCAACAGATAACAC-1_1, ATCGGCGCACATCATG-1_1, TCATCCGCACGAGGAT-1_1, CTGATCCTCTTTACAC-1_1, TCACACCCAACTTCTT-1_1, TGAGGGACACCGTACG-1_1, GTGCACGTCATCTGTT-1_1, GGTAATCAGTTGCATC-1_1, ATACTTCCAAGGTCTT-1_1, ...]\n",
      "\n",
      "[6099 rows x 0 columns],\n",
      " 'obs_names': Index(['TAGGTACCATGGCCAC-1_1', 'ATTCACTGTAACAGGC-1_1', 'TAACTTCCAACCACGC-1_1',\n",
      "       'TTGGGTACACGACAAG-1_1', 'AGGCCACAGAGTCACG-1_1', 'CACTGAAGTCGAAGCA-1_1',\n",
      "       'ACTGATGTCTGCACCT-1_1', 'TTACCGCCACTCAGAT-1_1', 'TTGGTTTTCCTAGCTC-1_1',\n",
      "       'TGGGAAGTCAGTGATC-1_1',\n",
      "       ...\n",
      "       'AAGTCGTGTGTGAATA-1_1', 'GTCGTTCTCCAAGGGA-1_1', 'GTTTGGATCGGCCTTT-1_1',\n",
      "       'GTACAGTCACGTATAC-1_1', 'TCATGCCCAAGAGGTC-1_1', 'CGCCATTGTTTGCCGG-1_1',\n",
      "       'CACTGGGGTCTACGTA-1_1', 'CATACTTGTAGAGGAA-1_1', 'TTTGGTTTCCACGGAC-1_1',\n",
      "       'ATGCATGAGTCATGAA-1_1'],\n",
      "      dtype='object', length=6099),\n",
      " 'obsm': AxisArrays with keys: ,\n",
      " 'obsp': PairwiseArrays with keys: ,\n",
      " 'raw': None,\n",
      " 'shape': (6099, 34546),\n",
      " 'uns': OverloadedDict, wrapping:\n",
      "\tOrderedDict()\n",
      "With overloaded keys:\n",
      "\t['neighbors'].,\n",
      " 'var': Empty DataFrame\n",
      "Columns: []\n",
      "Index: [AL627309.1, AL627309.5, AL627309.4, AL669831.2, LINC01409, FAM87B, LINC01128, LINC00115, FAM41C, AL645608.6, AL645608.2, LINC02593, SAMD11, NOC2L, KLHL17, PLEKHN1, PERM1, AL645608.7, HES4, ISG15, AL645608.1, AGRN, C1orf159, AL390719.3, LINC01342, AL390719.2, TTLL10-AS1, TTLL10, TNFRSF18, TNFRSF4, SDF4, B3GALT6, C1QTNF12, UBE2J2, LINC01786, SCNN1D, ACAP3, PUSL1, INTS11, AL139287.1, CPTP, DVL1, MXRA8, AURKAIP1, CCNL2, MRPL20-AS1, MRPL20, AL391244.2, ANKRD65, AL391244.1, LINC01770, VWA1, ATAD3C, ATAD3B, ATAD3A, TMEM240, SSU72, AL645728.1, FNDC10, AL691432.4, AL691432.2, MIB2, MMP23B, CDK11B, FO704657.1, SLC35E2B, CDK11A, SLC35E2A, NADK, GNB1, AL109917.1, CALML6, TMEM52, CFAP74, GABRD, AL391845.1, PRKCZ, AL590822.2, PRKCZ-AS1, FAAP20, AL590822.1, SKI, AL590822.3, MORN1, AL589739.1, AL513477.2, RER1, PEX10, PLCH2, AL139246.4, PANK4, HES5, AL139246.5, TNFRSF14-AS1, TNFRSF14, AL139246.3, PRXL2B, MMEL1, TTC34, AC242022.2, ...]\n",
      "\n",
      "[34546 rows x 0 columns],\n",
      " 'var_names': Index(['AL627309.1', 'AL627309.5', 'AL627309.4', 'AL669831.2', 'LINC01409',\n",
      "       'FAM87B', 'LINC01128', 'LINC00115', 'FAM41C', 'AL645608.6',\n",
      "       ...\n",
      "       'AC087190.2', 'AC136428.1', 'AC019183.1', 'AC105094.1', 'AC010485.1',\n",
      "       'VN1R2', 'AL031676.1', 'SMIM34A', 'AL050402.1', 'AL445072.1'],\n",
      "      dtype='object', length=34546),\n",
      " 'varm': AxisArrays with keys: ,\n",
      " 'varp': PairwiseArrays with keys: }\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_7382/22660072.py:11: DeprecationWarning: Use is_view instead of isview, isview will be removed in the future.\n",
      "  if name[0] != \"_\" and name not in disallowed_names and hasattr(obj, name)\n",
      "/tmp/ipykernel_7382/22660072.py:9: DeprecationWarning: Use is_view instead of isview, isview will be removed in the future.\n",
      "  name: getattr(obj, name)\n"
     ]
    }
   ],
   "source": [
    "print_attributes(adata)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "dd8f7ca9-f5c8-404e-bfcb-c584882c1b31",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:54:40.130703Z",
     "iopub.status.busy": "2022-09-27T19:54:40.130307Z",
     "iopub.status.idle": "2022-09-27T19:54:40.164445Z",
     "shell.execute_reply": "2022-09-27T19:54:40.163446Z",
     "shell.execute_reply.started": "2022-09-27T19:54:40.130673Z"
    },
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>TAGGTACCATGGCCAC-1_1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ATTCACTGTAACAGGC-1_1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TAACTTCCAACCACGC-1_1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TTGGGTACACGACAAG-1_1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AGGCCACAGAGTCACG-1_1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CGCCATTGTTTGCCGG-1_1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CACTGGGGTCTACGTA-1_1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CATACTTGTAGAGGAA-1_1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TTTGGTTTCCACGGAC-1_1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ATGCATGAGTCATGAA-1_1</th>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6099 rows × 0 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: []\n",
       "Index: [TAGGTACCATGGCCAC-1_1, ATTCACTGTAACAGGC-1_1, TAACTTCCAACCACGC-1_1, TTGGGTACACGACAAG-1_1, AGGCCACAGAGTCACG-1_1, CACTGAAGTCGAAGCA-1_1, ACTGATGTCTGCACCT-1_1, TTACCGCCACTCAGAT-1_1, TTGGTTTTCCTAGCTC-1_1, TGGGAAGTCAGTGATC-1_1, CCACGAGTCTCTTAAC-1_1, ACTTCCGCACAACGCC-1_1, GGGAAGTAGCGACCCT-1_1, TGGTAGTTCCCGTGTT-1_1, CGCATAACATGCCGGT-1_1, TCTATCACAAGGCTTT-1_1, ATCCACCAGAGGTATT-1_1, TAACGACAGATGACCG-1_1, TCTTAGTGTATGAGGC-1_1, CACTTCGCAGTACTAC-1_1, GTCAAACAGAACGTGC-1_1, GCAACCGAGGGCAGGA-1_1, CATACTTTCATCACTT-1_1, AAGAACATCGGATTAC-1_1, GGGTATTGTACGATGG-1_1, CTGTAGATCAACGTGT-1_1, GTCATTTGTATCTCGA-1_1, CCTTGTGCAGAGGGTT-1_1, AAGTTCGCAACACGTT-1_1, TCATTCACAAATCAAG-1_1, TCCATGCCAACGACTT-1_1, TCCTTCTCAGTTTCAG-1_1, TGTGAGTCAAATGATG-1_1, AAACGAAGTACAGAGC-1_1, CAACCAAAGTATTCCG-1_1, CTTCTCTCAGAGACTG-1_1, TACAACGGTGGCTGAA-1_1, AACGGGACATGCCGGT-1_1, AACCAACGTTGGGAAC-1_1, TATATCCAGCGTCAGA-1_1, AGACAAACATCCCGTT-1_1, ATGACCAGTCTTCATT-1_1, CTTACCGTCAGACATC-1_1, CGGGACTGTTAGTTCG-1_1, ATTCATCCACTGAGTT-1_1, TCATGAGAGAGGCGGA-1_1, TCCCACATCTAGTACG-1_1, CTTCCTTCATATCTCT-1_1, CCGGACACACTCGATA-1_1, ACACGCGCACCTGTCT-1_1, GAATCGTCAGAAGTGC-1_1, GGTGGCTCAAGCTCTA-1_1, CCTGCATCACATATGC-1_1, GTGGGAAGTTAAAGTG-1_1, CGTTCTGGTACTAGCT-1_1, ACCCTCACAATAGTCC-1_1, GCCCGAACAAACTAAG-1_1, GTGGAAGCACATGACT-1_1, GTTGTGACATCGATAC-1_1, GACAGCCCAGGTCCGT-1_1, TAAGCACGTTGGCTAT-1_1, GGGACAAGTCACCACG-1_1, CTGGCAGGTTCGGTAT-1_1, GACTCAACACTGTGAT-1_1, GCCAGTGGTGTGGTCC-1_1, TCTAACTGTAGGCAGT-1_1, GAAGAATGTAGCTTGT-1_1, TCACTCGCAATCTCTT-1_1, CAAGACTTCCCACAGG-1_1, CAGATACGTGACTCTA-1_1, TGGGATTAGAGGGTCT-1_1, ACCTGAACACTCCTTG-1_1, GACACGCCACTCGATA-1_1, CTCATCGTCACCGCTT-1_1, AGGTAGGGTCCCTGTT-1_1, TACCCGTCAACACTAC-1_1, TGCTGAAAGACGGATC-1_1, ACACCAACACAACGCC-1_1, AAGATAGCAAATGGAT-1_1, CTTCAATGTGACAGGT-1_1, GAAGCGAAGAGTTGAT-1_1, GCCGTGACACAAGCCC-1_1, CCTCAACCATACAGGG-1_1, ACAAAGATCCACAGGC-1_1, CAGATACAGTCCCAGC-1_1, GGCAGTCTCCGGTTCT-1_1, TAAGTCGAGCTGAGCA-1_1, GAGACCCGTCTGTGCG-1_1, TAACACGCATGTGTCA-1_1, TCAATTCGTTCTCGCT-1_1, GCTTTCGCACAGTGTT-1_1, AACCAACAGATAACAC-1_1, ATCGGCGCACATCATG-1_1, TCATCCGCACGAGGAT-1_1, CTGATCCTCTTTACAC-1_1, TCACACCCAACTTCTT-1_1, TGAGGGACACCGTACG-1_1, GTGCACGTCATCTGTT-1_1, GGTAATCAGTTGCATC-1_1, ATACTTCCAAGGTCTT-1_1, ...]\n",
       "\n",
       "[6099 rows x 0 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adata.obs"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b7ac5413-ee1a-40d4-8e3c-e7d4539714e9",
   "metadata": {},
   "source": [
    "Gene names are saved as `adata.var`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "78b1501a-068e-41a8-9a17-b173c6deb850",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:55:19.063310Z",
     "iopub.status.busy": "2022-09-27T19:55:19.062627Z",
     "iopub.status.idle": "2022-09-27T19:55:19.072080Z",
     "shell.execute_reply": "2022-09-27T19:55:19.071028Z",
     "shell.execute_reply.started": "2022-09-27T19:55:19.063278Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AL627309.1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AL627309.5</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AL627309.4</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AL669831.2</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LINC01409</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>VN1R2</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AL031676.1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SMIM34A</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AL050402.1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AL445072.1</th>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>34546 rows × 0 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: []\n",
       "Index: [AL627309.1, AL627309.5, AL627309.4, AL669831.2, LINC01409, FAM87B, LINC01128, LINC00115, FAM41C, AL645608.6, AL645608.2, LINC02593, SAMD11, NOC2L, KLHL17, PLEKHN1, PERM1, AL645608.7, HES4, ISG15, AL645608.1, AGRN, C1orf159, AL390719.3, LINC01342, AL390719.2, TTLL10-AS1, TTLL10, TNFRSF18, TNFRSF4, SDF4, B3GALT6, C1QTNF12, UBE2J2, LINC01786, SCNN1D, ACAP3, PUSL1, INTS11, AL139287.1, CPTP, DVL1, MXRA8, AURKAIP1, CCNL2, MRPL20-AS1, MRPL20, AL391244.2, ANKRD65, AL391244.1, LINC01770, VWA1, ATAD3C, ATAD3B, ATAD3A, TMEM240, SSU72, AL645728.1, FNDC10, AL691432.4, AL691432.2, MIB2, MMP23B, CDK11B, FO704657.1, SLC35E2B, CDK11A, SLC35E2A, NADK, GNB1, AL109917.1, CALML6, TMEM52, CFAP74, GABRD, AL391845.1, PRKCZ, AL590822.2, PRKCZ-AS1, FAAP20, AL590822.1, SKI, AL590822.3, MORN1, AL589739.1, AL513477.2, RER1, PEX10, PLCH2, AL139246.4, PANK4, HES5, AL139246.5, TNFRSF14-AS1, TNFRSF14, AL139246.3, PRXL2B, MMEL1, TTC34, AC242022.2, ...]\n",
       "\n",
       "[34546 rows x 0 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adata.var"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "697e4afe-2355-467d-9b38-511b1ca6cf52",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:55:25.006091Z",
     "iopub.status.busy": "2022-09-27T19:55:25.005312Z",
     "iopub.status.idle": "2022-09-27T19:55:25.012127Z",
     "shell.execute_reply": "2022-09-27T19:55:25.011034Z",
     "shell.execute_reply.started": "2022-09-27T19:55:25.006059Z"
    },
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['TAGGTACCATGGCCAC-1_1', 'ATTCACTGTAACAGGC-1_1', 'TAACTTCCAACCACGC-1_1',\n",
       "       'TTGGGTACACGACAAG-1_1', 'AGGCCACAGAGTCACG-1_1', 'CACTGAAGTCGAAGCA-1_1',\n",
       "       'ACTGATGTCTGCACCT-1_1', 'TTACCGCCACTCAGAT-1_1', 'TTGGTTTTCCTAGCTC-1_1',\n",
       "       'TGGGAAGTCAGTGATC-1_1',\n",
       "       ...\n",
       "       'AAGTCGTGTGTGAATA-1_1', 'GTCGTTCTCCAAGGGA-1_1', 'GTTTGGATCGGCCTTT-1_1',\n",
       "       'GTACAGTCACGTATAC-1_1', 'TCATGCCCAAGAGGTC-1_1', 'CGCCATTGTTTGCCGG-1_1',\n",
       "       'CACTGGGGTCTACGTA-1_1', 'CATACTTGTAGAGGAA-1_1', 'TTTGGTTTCCACGGAC-1_1',\n",
       "       'ATGCATGAGTCATGAA-1_1'],\n",
       "      dtype='object', length=6099)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adata.obs_names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "dac72415-179d-4635-9594-f651bff70149",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:55:32.004585Z",
     "iopub.status.busy": "2022-09-27T19:55:32.003939Z",
     "iopub.status.idle": "2022-09-27T19:55:32.010940Z",
     "shell.execute_reply": "2022-09-27T19:55:32.009894Z",
     "shell.execute_reply.started": "2022-09-27T19:55:32.004551Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['AL627309.1', 'AL627309.5', 'AL627309.4', 'AL669831.2', 'LINC01409',\n",
       "       'FAM87B', 'LINC01128', 'LINC00115', 'FAM41C', 'AL645608.6',\n",
       "       ...\n",
       "       'AC087190.2', 'AC136428.1', 'AC019183.1', 'AC105094.1', 'AC010485.1',\n",
       "       'VN1R2', 'AL031676.1', 'SMIM34A', 'AL050402.1', 'AL445072.1'],\n",
       "      dtype='object', length=34546)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adata.var_names"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2606cda3-2ed6-49f3-b314-d94f0bd36174",
   "metadata": {},
   "source": [
    "There are no layers in this data set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b60b7275-2f03-4858-9236-e231016c9cb2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:56:04.354170Z",
     "iopub.status.busy": "2022-09-27T19:56:04.353770Z",
     "iopub.status.idle": "2022-09-27T19:56:04.360312Z",
     "shell.execute_reply": "2022-09-27T19:56:04.359392Z",
     "shell.execute_reply.started": "2022-09-27T19:56:04.354139Z"
    },
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Layers with keys: "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adata.layers"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17aa201f-56a2-4b5f-8a0f-82a26b396fe5",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "There are no multidimensional observations or variables."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "cab4cc2e-6a74-441d-92ec-f9a32b751d34",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T19:57:30.115707Z",
     "iopub.status.busy": "2022-09-27T19:57:30.115307Z",
     "iopub.status.idle": "2022-09-27T19:57:30.121752Z",
     "shell.execute_reply": "2022-09-27T19:57:30.120804Z",
     "shell.execute_reply.started": "2022-09-27T19:57:30.115676Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "AxisArrays with keys: \n",
      "AxisArrays with keys: \n",
      "PairwiseArrays with keys: \n",
      "PairwiseArrays with keys: \n"
     ]
    }
   ],
   "source": [
    "print(adata.obsm)\n",
    "print(adata.varm)\n",
    "print(adata.obsp)\n",
    "print(adata.varp)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "345e74f3-1928-47a8-ae7d-6832a9560d78",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "The data appears to contain reads mapped to 6099 cell-associated barcodes and 34546 RNA molecule-associated features."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1fa88e29-8da2-44c6-ab58-224516901a47",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    },
    "tags": []
   },
   "source": [
    "## Preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "601e6d6e-ff8d-4c4c-9a22-686ed4e35dc2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T20:00:48.004985Z",
     "iopub.status.busy": "2022-09-27T20:00:48.004619Z",
     "iopub.status.idle": "2022-09-27T20:01:10.601304Z",
     "shell.execute_reply": "2022-09-27T20:01:10.600156Z",
     "shell.execute_reply.started": "2022-09-27T20:00:48.004959Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Global seed set to 0\n"
     ]
    }
   ],
   "source": [
    "import scvi"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f480e956-8a3b-4998-ae44-53188bad6c46",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "source": [
    "### Filter transcripts by minimum number of cells with non-zero counts"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cf87425e-4b04-4c7b-b881-21846ab209d3",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "We may choose to filter out transcript types that are detected in a relatively small number of cells. The optimum threshold is not known. Here we use 10 as a base case."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "65c13617-0e22-40e2-9372-b02a35667264",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T20:03:22.006499Z",
     "iopub.status.busy": "2022-09-27T20:03:22.005606Z",
     "iopub.status.idle": "2022-09-27T20:03:22.012563Z",
     "shell.execute_reply": "2022-09-27T20:03:22.011667Z",
     "shell.execute_reply.started": "2022-09-27T20:03:22.006464Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AnnData object with n_obs × n_vars = 6099 × 34546"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adata"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "65c5aaa9-598f-42ab-8256-a56407736aeb",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "source": [
    "See the [documentation for scanpy pre-processing filter-genes](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.filter_genes.html)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "375698ca-d609-4c64-8be3-7f1598d15f74",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T20:03:23.175591Z",
     "iopub.status.busy": "2022-09-27T20:03:23.175074Z",
     "iopub.status.idle": "2022-09-27T20:03:24.201997Z",
     "shell.execute_reply": "2022-09-27T20:03:24.200975Z",
     "shell.execute_reply.started": "2022-09-27T20:03:23.175554Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "sc.pp.filter_genes(adata, min_cells = 10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "5d4212ba-6dec-4d90-9872-1982e2ead16a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T20:03:26.241798Z",
     "iopub.status.busy": "2022-09-27T20:03:26.240738Z",
     "iopub.status.idle": "2022-09-27T20:03:26.248079Z",
     "shell.execute_reply": "2022-09-27T20:03:26.246882Z",
     "shell.execute_reply.started": "2022-09-27T20:03:26.241761Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AnnData object with n_obs × n_vars = 6099 × 19896\n",
       "    var: 'n_cells'"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adata"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6341122f-db4d-4f9b-8387-088d93e5337f",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "source": [
    "Following filtration there are 19896 transcript types remaining that are present in at least 10 cells. This means 14650 transcript types were removed at the threshold of 10. Notice that an annotation named `n_cells` has been added to the genes to indicate the number of cells with non-zero values for that transcript type."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "934c6628-8d55-4795-b7a1-debfbb3a21dc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T20:12:07.005482Z",
     "iopub.status.busy": "2022-09-27T20:12:07.005109Z",
     "iopub.status.idle": "2022-09-27T20:12:07.020745Z",
     "shell.execute_reply": "2022-09-27T20:12:07.019798Z",
     "shell.execute_reply.started": "2022-09-27T20:12:07.005452Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>n_cells</th>\n",
       "      <th>highly_variable</th>\n",
       "      <th>highly_variable_rank</th>\n",
       "      <th>means</th>\n",
       "      <th>variances</th>\n",
       "      <th>variances_norm</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>TTLL10</th>\n",
       "      <td>112</td>\n",
       "      <td>True</td>\n",
       "      <td>903.0</td>\n",
       "      <td>0.028857</td>\n",
       "      <td>0.069354</td>\n",
       "      <td>1.901045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TNFRSF18</th>\n",
       "      <td>15</td>\n",
       "      <td>True</td>\n",
       "      <td>1604.0</td>\n",
       "      <td>0.002951</td>\n",
       "      <td>0.004911</td>\n",
       "      <td>1.513808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CFAP74</th>\n",
       "      <td>159</td>\n",
       "      <td>True</td>\n",
       "      <td>1370.0</td>\n",
       "      <td>0.041154</td>\n",
       "      <td>0.087024</td>\n",
       "      <td>1.607399</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TTC34</th>\n",
       "      <td>209</td>\n",
       "      <td>True</td>\n",
       "      <td>245.0</td>\n",
       "      <td>0.080341</td>\n",
       "      <td>0.363502</td>\n",
       "      <td>3.044086</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AJAP1</th>\n",
       "      <td>31</td>\n",
       "      <td>True</td>\n",
       "      <td>1922.0</td>\n",
       "      <td>0.006886</td>\n",
       "      <td>0.011432</td>\n",
       "      <td>1.421002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MT-ND4L</th>\n",
       "      <td>650</td>\n",
       "      <td>True</td>\n",
       "      <td>1212.0</td>\n",
       "      <td>0.191671</td>\n",
       "      <td>0.559353</td>\n",
       "      <td>1.695637</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MT-ND4</th>\n",
       "      <td>1328</td>\n",
       "      <td>True</td>\n",
       "      <td>178.0</td>\n",
       "      <td>0.833087</td>\n",
       "      <td>9.742224</td>\n",
       "      <td>3.486984</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MT-ND5</th>\n",
       "      <td>886</td>\n",
       "      <td>True</td>\n",
       "      <td>443.0</td>\n",
       "      <td>0.332514</td>\n",
       "      <td>1.669344</td>\n",
       "      <td>2.430210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MT-ND6</th>\n",
       "      <td>821</td>\n",
       "      <td>True</td>\n",
       "      <td>123.0</td>\n",
       "      <td>0.383178</td>\n",
       "      <td>3.357087</td>\n",
       "      <td>3.985056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MT-CYB</th>\n",
       "      <td>1295</td>\n",
       "      <td>True</td>\n",
       "      <td>414.0</td>\n",
       "      <td>0.622397</td>\n",
       "      <td>4.384615</td>\n",
       "      <td>2.487058</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2000 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          n_cells  highly_variable  highly_variable_rank     means  variances  \\\n",
       "TTLL10        112             True                 903.0  0.028857   0.069354   \n",
       "TNFRSF18       15             True                1604.0  0.002951   0.004911   \n",
       "CFAP74        159             True                1370.0  0.041154   0.087024   \n",
       "TTC34         209             True                 245.0  0.080341   0.363502   \n",
       "AJAP1          31             True                1922.0  0.006886   0.011432   \n",
       "...           ...              ...                   ...       ...        ...   \n",
       "MT-ND4L       650             True                1212.0  0.191671   0.559353   \n",
       "MT-ND4       1328             True                 178.0  0.833087   9.742224   \n",
       "MT-ND5        886             True                 443.0  0.332514   1.669344   \n",
       "MT-ND6        821             True                 123.0  0.383178   3.357087   \n",
       "MT-CYB       1295             True                 414.0  0.622397   4.384615   \n",
       "\n",
       "          variances_norm  \n",
       "TTLL10          1.901045  \n",
       "TNFRSF18        1.513808  \n",
       "CFAP74          1.607399  \n",
       "TTC34           3.044086  \n",
       "AJAP1           1.421002  \n",
       "...                  ...  \n",
       "MT-ND4L         1.695637  \n",
       "MT-ND4          3.486984  \n",
       "MT-ND5          2.430210  \n",
       "MT-ND6          3.985056  \n",
       "MT-CYB          2.487058  \n",
       "\n",
       "[2000 rows x 6 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adata.var"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9bfaa5a4-919c-4677-bc3a-b83ce2d4d451",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "source": [
    "### Select highly variable genes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2cb808b-5fee-4f01-9c82-79e4ec88f3a3",
   "metadata": {},
   "source": [
    "It is common to select transcript types with high variability among the cell population under the assumption that this will help to focus on features that distinguish the cells. Again there is no perfect threshold. Here we select the 2000 highest variability genes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "073daaa8-3c88-4f81-9d95-d4932cc001f3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T20:08:15.005577Z",
     "iopub.status.busy": "2022-09-27T20:08:15.005160Z",
     "iopub.status.idle": "2022-09-27T20:08:15.012088Z",
     "shell.execute_reply": "2022-09-27T20:08:15.010985Z",
     "shell.execute_reply.started": "2022-09-27T20:08:15.005545Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AnnData object with n_obs × n_vars = 6099 × 19896\n",
       "    var: 'n_cells'"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adata"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "484cd41f-c198-4b79-9542-dfc440c61808",
   "metadata": {},
   "source": [
    "See the [documentation for scanpy pre-processing highly-variable-genes](https://scanpy.readthedocs.io/en/latest/generated/scanpy.pp.highly_variable_genes.html)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "82a5c4d5-a23c-42a6-b04e-c92e8a303ada",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T20:09:20.110715Z",
     "iopub.status.busy": "2022-09-27T20:09:20.109979Z",
     "iopub.status.idle": "2022-09-27T20:09:24.344832Z",
     "shell.execute_reply": "2022-09-27T20:09:24.343979Z",
     "shell.execute_reply.started": "2022-09-27T20:09:20.110682Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "sc.pp.highly_variable_genes(adata, n_top_genes = 2000, subset = True, flavor = 'seurat_v3')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "eab58f44-688d-49c0-8f24-efa51df548ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T20:09:52.140107Z",
     "iopub.status.busy": "2022-09-27T20:09:52.138972Z",
     "iopub.status.idle": "2022-09-27T20:09:52.146047Z",
     "shell.execute_reply": "2022-09-27T20:09:52.145114Z",
     "shell.execute_reply.started": "2022-09-27T20:09:52.140068Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AnnData object with n_obs × n_vars = 6099 × 2000\n",
       "    var: 'n_cells', 'highly_variable', 'highly_variable_rank', 'means', 'variances', 'variances_norm'\n",
       "    uns: 'hvg'"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adata"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee8beea9-ad64-479f-80df-9c0648e72ca9",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    },
    "tags": []
   },
   "source": [
    "We have filtered down to 2000 transcript types and added 5 annotations to the genes including a binary variable indicating membership in the highly-variable class, the ranking among highly variable genes, and the mean, variance, and normalized variance for each gene across cells."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "10164845-6cdd-4172-a711-05a3e03319d4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-09-27T20:11:45.044246Z",
     "iopub.status.busy": "2022-09-27T20:11:45.043300Z",
     "iopub.status.idle": "2022-09-27T20:11:45.059179Z",
     "shell.execute_reply": "2022-09-27T20:11:45.058221Z",
     "shell.execute_reply.started": "2022-09-27T20:11:45.044211Z"
    },
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>n_cells</th>\n",
       "      <th>highly_variable</th>\n",
       "      <th>highly_variable_rank</th>\n",
       "      <th>means</th>\n",
       "      <th>variances</th>\n",
       "      <th>variances_norm</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>TTLL10</th>\n",
       "      <td>112</td>\n",
       "      <td>True</td>\n",
       "      <td>903.0</td>\n",
       "      <td>0.028857</td>\n",
       "      <td>0.069354</td>\n",
       "      <td>1.901045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TNFRSF18</th>\n",
       "      <td>15</td>\n",
       "      <td>True</td>\n",
       "      <td>1604.0</td>\n",
       "      <td>0.002951</td>\n",
       "      <td>0.004911</td>\n",
       "      <td>1.513808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CFAP74</th>\n",
       "      <td>159</td>\n",
       "      <td>True</td>\n",
       "      <td>1370.0</td>\n",
       "      <td>0.041154</td>\n",
       "      <td>0.087024</td>\n",
       "      <td>1.607399</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TTC34</th>\n",
       "      <td>209</td>\n",
       "      <td>True</td>\n",
       "      <td>245.0</td>\n",
       "      <td>0.080341</td>\n",
       "      <td>0.363502</td>\n",
       "      <td>3.044086</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AJAP1</th>\n",
       "      <td>31</td>\n",
       "      <td>True</td>\n",
       "      <td>1922.0</td>\n",
       "      <td>0.006886</td>\n",
       "      <td>0.011432</td>\n",
       "      <td>1.421002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MT-ND4L</th>\n",
       "      <td>650</td>\n",
       "      <td>True</td>\n",
       "      <td>1212.0</td>\n",
       "      <td>0.191671</td>\n",
       "      <td>0.559353</td>\n",
       "      <td>1.695637</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MT-ND4</th>\n",
       "      <td>1328</td>\n",
       "      <td>True</td>\n",
       "      <td>178.0</td>\n",
       "      <td>0.833087</td>\n",
       "      <td>9.742224</td>\n",
       "      <td>3.486984</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MT-ND5</th>\n",
       "      <td>886</td>\n",
       "      <td>True</td>\n",
       "      <td>443.0</td>\n",
       "      <td>0.332514</td>\n",
       "      <td>1.669344</td>\n",
       "      <td>2.430210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MT-ND6</th>\n",
       "      <td>821</td>\n",
       "      <td>True</td>\n",
       "      <td>123.0</td>\n",
       "      <td>0.383178</td>\n",
       "      <td>3.357087</td>\n",
       "      <td>3.985056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MT-CYB</th>\n",
       "      <td>1295</td>\n",
       "      <td>True</td>\n",
       "      <td>414.0</td>\n",
       "      <td>0.622397</td>\n",
       "      <td>4.384615</td>\n",
       "      <td>2.487058</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2000 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          n_cells  highly_variable  highly_variable_rank     means  variances  \\\n",
       "TTLL10        112             True                 903.0  0.028857   0.069354   \n",
       "TNFRSF18       15             True                1604.0  0.002951   0.004911   \n",
       "CFAP74        159             True                1370.0  0.041154   0.087024   \n",
       "TTC34         209             True                 245.0  0.080341   0.363502   \n",
       "AJAP1          31             True                1922.0  0.006886   0.011432   \n",
       "...           ...              ...                   ...       ...        ...   \n",
       "MT-ND4L       650             True                1212.0  0.191671   0.559353   \n",
       "MT-ND4       1328             True                 178.0  0.833087   9.742224   \n",
       "MT-ND5        886             True                 443.0  0.332514   1.669344   \n",
       "MT-ND6        821             True                 123.0  0.383178   3.357087   \n",
       "MT-CYB       1295             True                 414.0  0.622397   4.384615   \n",
       "\n",
       "          variances_norm  \n",
       "TTLL10          1.901045  \n",
       "TNFRSF18        1.513808  \n",
       "CFAP74          1.607399  \n",
       "TTC34           3.044086  \n",
       "AJAP1           1.421002  \n",
       "...                  ...  \n",
       "MT-ND4L         1.695637  \n",
       "MT-ND4          3.486984  \n",
       "MT-ND5          2.430210  \n",
       "MT-ND6          3.985056  \n",
       "MT-CYB          2.487058  \n",
       "\n",
       "[2000 rows x 6 columns]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adata.var"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a1140b7-d57d-4715-9d6d-80459156a746",
   "metadata": {},
   "source": [
    "### Doublet removal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b8fccb73-60dc-48a2-b9ce-2655f4b26eb1",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "celltoolbar": "Slideshow",
  "jupytext": {
   "cell_metadata_json": true,
   "formats": "ipynb,md,py:percent",
   "notebook_metadata_filter": "all"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.7"
  },
  "rise": {
   "scroll": true,
   "theme": "black"
  },
  "toc-autonumbering": true,
  "toc-showcode": false,
  "toc-showmarkdowntxt": false,
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {},
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
